version: "3.9"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: demo-fastapi-otel:local
    container_name: app
    depends_on:
      - redis
      - alloy
    environment:
      # OpenTelemetry (auto-instrumentation via ENTRYPOINT)
      OTEL_SERVICE_NAME: fastapi-demo
      OTEL_RESOURCE_ATTRIBUTES: service.namespace=demo,env=local
      OTEL_EXPORTER_OTLP_ENDPOINT: http://alloy:4318
      OTEL_EXPORTER_OTLP_PROTOCOL: http/protobuf
      OTEL_TRACES_EXPORTER: otlp
      OTEL_METRICS_EXPORTER: otlp
      OTEL_LOGS_EXPORTER: otlp
      # Fréquence d’export métriques (ms)
      OTEL_METRIC_EXPORT_INTERVAL: 15000
    ports:
      - "8000:8000"   # API + /metrics
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: redis
    ports: ["6379:6379"]
    restart: unless-stopped

  alloy:
    image: grafana/alloy:latest
    container_name: alloy
    command: ["run", "/etc/alloy/config.alloy"]
    volumes:
      - ./config.alloy:/etc/alloy/config.alloy:ro
    ports:
      - "4318:4318"     # OTLP HTTP ingest
      - "12345:12345"   # (optionnel) UI de debug Alloy si activée
    depends_on:
      - loki
      - tempo
      - mimir
    restart: unless-stopped

  loki:
    image: grafana/loki:2.9.8
    container_name: loki
    command: ["-config.file=/etc/loki/config.yaml"]
    volumes:
      - ./config/loki/config.yaml:/etc/loki/config.yaml:ro
      - loki-data:/loki
    ports:
      - "3100:3100"
    restart: unless-stopped

  tempo:
    image: grafana/tempo:2.5.0
    container_name: tempo
    command: ["-config.file=/etc/tempo/config.yaml"]
    volumes:
      - ./config/tempo/config.yaml:/etc/tempo/config.yaml:ro
      - tempo-data:/var/tempo
    ports:
      - "3200:3200"   # tempo http
      - "4317:4317"   # otlp gRPC (si besoin)
    restart: unless-stopped

  mimir:
    image: grafana/mimir:2.12.0
    container_name: mimir
    command: ["-config.file=/etc/mimir/config.yaml"]
    volumes:
      - ./config/mimir/config.yaml:/etc/mimir/config.yaml:ro
      - mimir-data:/data
      - mimir-tmp:/tmp
    ports:
      - "9009:9009"  # distributor / query-frontend selon config
    restart: unless-stopped

  # (Optionnel) UI pour tout voir rapidement
  grafana:
    image: grafana/grafana:11.2.0
    container_name: grafana
    environment:
      GF_INSTALL_PLUGINS: grafana-lokiexplore-app
    volumes:
      - grafana-data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - loki
      - tempo
      - mimir
    restart: unless-stopped

volumes:
  loki-data:
  tempo-data:
  mimir-data:
  mimir-tmp:
  grafana-data:
